{"version":3,"file":"static/js/227.80fd95b2.chunk.js","mappings":"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","sources":["images/sprite.svg","webpack://my-app/./src/components/Header/header.module.css?33e9","webpack://my-app/./src/components/UserMenu/userMenu.module.css?3e42","components/UserMenu/UserMenu.tsx","components/Header/Header.tsx","webpack://my-app/./src/components/chatsList/chatsList.module.css?e5f3","webpack://my-app/./src/components/Modals/modalAddChat.module.css?a490","components/Modals/ModalAddChat.tsx","components/chatsList/chatsList.tsx","webpack://my-app/./src/page/ChatsPage/chatPage.module.css?96b1","webpack://my-app/./src/components/RightChatPage/rightChatPage.module.css?c023","components/RightChatPage/RightChatPage.tsx","page/ChatsPage/ChatPage.tsx"],"sourcesContent":["var _symbol, _symbol2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"google-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#00ac47\",\n    style: {\n      fill: \"var(--color1, #00ac47)\"\n    },\n    d: \"M23.75 16c0 0.002 0 0.003 0 0.005 0 4.277-3.467 7.745-7.745 7.745-3.337 0-6.181-2.111-7.27-5.070l-0.017-0.054-4.433 3.546c2.265 4.241 6.662 7.078 11.721 7.078 7.314 0 13.244-5.93 13.244-13.244 0-0.002 0-0.004 0-0.006v0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4285f4\",\n    style: {\n      fill: \"var(--color2, #4285f4)\"\n    },\n    d: \"M23.75 16c-0.002 2.589-1.275 4.88-3.229 6.283l-0.023 0.016 4.382 3.506c2.686-2.425 4.367-5.918 4.369-9.804v-0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffba00\",\n    style: {\n      fill: \"var(--color3, #ffba00)\"\n    },\n    d: \"M8.25 16c0.002-0.943 0.173-1.845 0.485-2.679l-0.017 0.053-4.433-3.546c-0.967 1.788-1.535 3.914-1.535 6.172s0.568 4.384 1.569 6.242l-0.035-0.070 4.433-3.546c-0.294-0.781-0.466-1.683-0.468-2.625v-0.001z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2ab2db\",\n    style: {\n      fill: \"var(--color4, #2ab2db)\"\n    },\n    d: \"M8.718 13.374v0 0 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ea4435\",\n    style: {\n      fill: \"var(--color5, #ea4435)\"\n    },\n    d: \"M16 8.25c1.715 0.001 3.299 0.562 4.579 1.511l-0.021-0.015 4.060-3.789c-2.301-1.992-5.323-3.207-8.629-3.207-5.054 0-9.446 2.838-11.669 7.007l-0.035 0.071 4.433 3.546c1.108-3.009 3.948-5.118 7.282-5.124h0.001z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2ab2db\",\n    style: {\n      fill: \"var(--color4, #2ab2db)\"\n    },\n    d: \"M8.718 18.626v0 0 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4285f4\",\n    style: {\n      fill: \"var(--color2, #4285f4)\"\n    },\n    d: \"M29.25 15v1l-2.25 3.5h-10.5v-5.5h11.75c0.552 0 1 0.448 1 1v0z\"\n  })), _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"arrow-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 10,\n    strokeWidth: 2,\n    d: \"M31 16l-30-15 6 15-6 15z\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"close-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.5,\n    d: \"M24 8l-16 16\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.5,\n    d: \"M8 8l16 16\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.fa09150a10da6a862e5e910b58fb237b.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_header__ys5bL\",\"useContainer\":\"header_useContainer__lO6Ni\",\"btnLogout\":\"header_btnLogout__8iQeN\"};","// extracted by mini-css-extract-plugin\nexport default {\"userCard\":\"userMenu_userCard__UFlgo\",\"img\":\"userMenu_img__r+SKE\"};","import { FC } from \"react\";\r\nimport styles from \"./userMenu.module.css\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nexport const UserMenu: FC = () => {\r\n  const { avatar, username } = useAuth();\r\n  return (\r\n    <div className={styles.userCard}>\r\n      {avatar && <img src={avatar} alt=\"avatar\" className={styles.img} />}\r\n      <div>{username}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport styles from \"./header.module.css\";\r\nimport { UserMenu } from \"../UserMenu/UserMenu\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { logout } from \"../../redux/api\";\r\n\r\nexport const Header: FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.useContainer}>\r\n        <UserMenu />\r\n        <button className={styles.btnLogout} onClick={() => dispatch(logout())}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"chatListCard\":\"chatsList_chatListCard__EBKUx\",\"headerList\":\"chatsList_headerList__qwiUD\",\"btnAddChat\":\"chatsList_btnAddChat__864Wh\",\"chatListTitle\":\"chatsList_chatListTitle__T5mxL\",\"listItem\":\"chatsList_listItem__7xvFz\",\"listItemActive\":\"chatsList_listItemActive__eQBr3\",\"nameDateCard\":\"chatsList_nameDateCard__mSxc0\",\"img\":\"chatsList_img__v9M8Q\",\"firstName\":\"chatsList_firstName__G6sCE\",\"lastName\":\"chatsList_lastName__VTRiR\",\"date\":\"chatsList_date__Wshoz\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalAddChat\":\"modalAddChat_modalAddChat__1l6RB\",\"inputCustom\":\"modalAddChat_inputCustom__bznTs\",\"btnSubmit\":\"modalAddChat_btnSubmit__qbJd3\",\"label\":\"modalAddChat_label__qAZFZ\",\"errMsg\":\"modalAddChat_errMsg__i4liX\",\"btnClose\":\"modalAddChat_btnClose__okvOL\",\"iconClose\":\"modalAddChat_iconClose__PfN1E\"};","import { FC } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport styled from \"./modalAddChat.module.css\";\r\nimport { Formik, Field, Form, FormikHelpers, ErrorMessage } from \"formik\";\r\nimport sprite from \"../../images/sprite.svg\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { addChat } from \"../../redux/api\";\r\n\r\nconst AddChatSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  lastName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nexport interface IChat {\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\ninterface IModalAddChatProps {\r\n  isOpen: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\nexport const ModalAddChat: FC<IModalAddChatProps> = ({ isOpen, onToggle }) => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={onToggle}\r\n      contentLabel=\"Example Modal\"\r\n      className={styled.modalAddChat}\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n        }}\r\n        validationSchema={AddChatSchema}\r\n        onSubmit={(values: IChat, actions: FormikHelpers<IChat>) => {\r\n          dispatch(addChat(values));\r\n          onToggle();\r\n        }}\r\n      >\r\n        <Form>\r\n          <label className={styled.label}>\r\n            <Field\r\n              name=\"firstName\"\r\n              placeholder=\"firstName\"\r\n              className={styled.inputCustom}\r\n            />\r\n            <ErrorMessage\r\n              component=\"div\"\r\n              name=\"firstName\"\r\n              className={styled.errMsg}\r\n            />\r\n          </label>\r\n          <label className={styled.label}>\r\n            <Field\r\n              name=\"lastName\"\r\n              placeholder=\"lastName\"\r\n              className={styled.inputCustom}\r\n            />\r\n            <ErrorMessage\r\n              component=\"div\"\r\n              name=\"lastName\"\r\n              className={styled.errMsg}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className={styled.btnSubmit}>\r\n            Add chat\r\n          </button>\r\n          <button className={styled.btnClose} onClick={onToggle}>\r\n            <svg className={styled.iconClose} width={20} height={20}>\r\n              <use href={`${sprite}#close-icon`} />\r\n            </svg>\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n","import { FC, useState } from \"react\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport styled from \"./chatsList.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { updateIsActiveChat } from \"../../redux/api\";\r\nimport { ModalAddChat } from \"../Modals/ModalAddChat\";\r\n\r\nexport const ChatsList: FC = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const { chats } = useAuth();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const toggleModal = () => {\r\n    setOpen((pS) => !pS);\r\n  };\r\n  return (\r\n    <>\r\n      {chats.length > 0 && (\r\n        <div className={styled.chatListCard}>\r\n          <div className={styled.headerList}>\r\n            <div className={styled.chatListTitle}>Chats</div>\r\n            <button className={styled.btnAddChat} onClick={toggleModal}>\r\n              Add new chat\r\n            </button>\r\n          </div>\r\n          <ul>\r\n            {chats\r\n              .map((chat) => {\r\n                const lastEl = chat.messages[chat.messages.length - 1];\r\n                let day = null;\r\n                let monthName = null;\r\n                let year = null;\r\n                if (lastEl?.date) {\r\n                  const data = new Date(lastEl.date);\r\n                  day = data.getDate();\r\n                  monthName = data.toLocaleString(\"en-US\", {\r\n                    month: \"short\",\r\n                  });\r\n                  year = data.getFullYear();\r\n                }\r\n                return (\r\n                  <li\r\n                    key={chat._id}\r\n                    className={`${\r\n                      chat.isActive === true\r\n                        ? styled.listItemActive\r\n                        : styled.listItem\r\n                    }`}\r\n                    onClick={() => {\r\n                      dispatch(updateIsActiveChat(chat._id));\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={chat.avatar}\r\n                      alt=\"avatar\"\r\n                      className={styled.img}\r\n                    />\r\n                    <div className={styled.nameDateCard}>\r\n                      <div>\r\n                        <span className={styled.firstName}>\r\n                          {chat.firstName}\r\n                        </span>\r\n                        <span className={styled.lastName}>{chat.lastName}</span>\r\n                      </div>\r\n                      {day && monthName && year && (\r\n                        <div\r\n                          className={styled.date}\r\n                        >{`${monthName} ${day}, ${year}`}</div>\r\n                      )}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })\r\n              .reverse()}\r\n          </ul>\r\n          <ModalAddChat isOpen={open} onToggle={toggleModal} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"containerChatPage\":\"chatPage_containerChatPage__VYEwW\",\"left\":\"chatPage_left__-8i2O\"};","// extracted by mini-css-extract-plugin\nexport default {\"right\":\"rightChatPage_right__+LXeE\",\"nameChat\":\"rightChatPage_nameChat__pneiL\",\"img\":\"rightChatPage_img__f8dnU\",\"firstName\":\"rightChatPage_firstName__POWmw\",\"listMessage\":\"rightChatPage_listMessage__J2eZe\",\"messageCardLeft\":\"rightChatPage_messageCardLeft__+Tg2D\",\"messageCardRight\":\"rightChatPage_messageCardRight__TkGQx\",\"messageDateWrapper\":\"rightChatPage_messageDateWrapper__wKXg8\",\"messageLeft\":\"rightChatPage_messageLeft__vjMqc\",\"messageRight\":\"rightChatPage_messageRight__la60f\",\"dateLeft\":\"rightChatPage_dateLeft__MB8Ig\",\"dateRight\":\"rightChatPage_dateRight__FoGFk\",\"formWrapper\":\"rightChatPage_formWrapper__CYxQY\",\"form\":\"rightChatPage_form__tpf3B\",\"input\":\"rightChatPage_input__sg1Ac\",\"btn\":\"rightChatPage_btn__9rX-5\",\"icon\":\"rightChatPage_icon__R3YCY\"};","import { FC } from \"react\";\r\nimport styled from \"./rightChatPage.module.css\";\r\nimport sprite from \"../../images/sprite.svg\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { Formik, Field, Form, FormikHelpers } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { addMessage } from \"../../redux/api\";\r\n\r\nexport interface IValues {\r\n  message: string;\r\n  id?: string;\r\n}\r\n\r\nexport const RightChatPage: FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { chats } = useAuth();\r\n  const chat = chats.find((el) => el.isActive === true);\r\n  return (\r\n    <>\r\n      {chat && (\r\n        <div className={styled.right}>\r\n          <div className={styled.nameChat}>\r\n            <img src={chat.avatar} alt=\"avatar\" className={styled.img} />\r\n            <div>\r\n              <span className={styled.firstName}>{chat.firstName}</span>\r\n              <span>{chat.lastName}</span>\r\n            </div>\r\n          </div>\r\n          <ul className={styled.listMessage}>\r\n            {chat.messages.map((el) => {\r\n              const data = new Date(el.date);\r\n              const dayOfMonth = data.getDate();\r\n              const monthIndex = data.getMonth() + 1;\r\n              const year = data.getFullYear();\r\n              const hours = data.getHours();\r\n              const minutes = data.getMinutes();\r\n              const seconds = data.getSeconds();\r\n              const formattedHours = String(hours).padStart(2, \"0\");\r\n              const formattedMinutes = String(minutes).padStart(2, \"0\");\r\n              const formattedSeconds = String(seconds).padStart(2, \"0\");\r\n              return (\r\n                <li\r\n                  key={el._id}\r\n                  className={\r\n                    el?.owner ? styled.messageCardLeft : styled.messageCardRight\r\n                  }\r\n                >\r\n                  {el?.owner && (\r\n                    <>\r\n                      <div className={styled.messageDateWrapper}>\r\n                        <p className={styled.messageLeft}>{el.message}</p>\r\n                        <p\r\n                          className={styled.dateLeft}\r\n                        >{`${monthIndex}/${dayOfMonth}/${year} ${formattedHours}:${formattedMinutes}:${formattedSeconds} AM`}</p>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  {!el?.owner && (\r\n                    <>\r\n                      <div className={styled.messageDateWrapper}>\r\n                        <p className={styled.messageRight}>{el.message}</p>\r\n                        <p\r\n                          className={styled.dateRight}\r\n                        >{`${monthIndex}/${dayOfMonth}/${year} ${formattedHours}:${formattedMinutes}:${formattedSeconds} AM`}</p>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <Formik\r\n            initialValues={{\r\n              message: \"\",\r\n            }}\r\n            onSubmit={(values: IValues, actions: FormikHelpers<IValues>) => {\r\n              dispatch(addMessage({ message: values.message, id: chat._id }));\r\n              actions.resetForm();\r\n            }}\r\n          >\r\n            <div className={styled.formWrapper}>\r\n              <Form className={styled.form}>\r\n                <Field\r\n                  name=\"message\"\r\n                  placeholder=\"Type your message\"\r\n                  className={styled.input}\r\n                />\r\n                <button className={styled.btn}>\r\n                  <svg width={25} height={25} className={styled.icon}>\r\n                    <use href={`${sprite}#arrow-icon`} />\r\n                  </svg>\r\n                </button>\r\n              </Form>\r\n            </div>\r\n          </Formik>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { FC, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { Header } from \"../../components/Header/Header\";\r\nimport { ChatsList } from \"../../components/chatsList/chatsList\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport styled from \"./chatPage.module.css\";\r\nimport { RightChatPage } from \"../../components/RightChatPage/RightChatPage\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { addRandomQuote } from \"../../redux/auth/authSlice\";\r\n\r\nconst socket = io(\"https://test-task-backend-reenbit.onrender.com\");\r\n\r\nconst ChatsPage: FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { chats } = useAuth();\r\n  useEffect(() => {\r\n    socket.on(\"quoteResponse\", (updatedChat) => {\r\n      dispatch(addRandomQuote(updatedChat));\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"quoteResponse\");\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={styled.containerChatPage}>\r\n        <div className={styled.left}>\r\n          <Header />\r\n          {chats?.length > 0 && <ChatsList />}\r\n        </div>\r\n        {chats.length > 0 && <RightChatPage />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChatsPage;\r\n"],"names":["UserMenu","avatar","username","useAuth","_jsxs","className","styles","children","_jsx","src","alt","Header","dispatch","useDispatch","onClick","logout","AddChatSchema","Yup","shape","firstName","min","max","required","lastName","Modal","ModalAddChat","_ref","isOpen","onToggle","onRequestClose","contentLabel","styled","Formik","initialValues","validationSchema","onSubmit","values","actions","addChat","Form","Field","name","placeholder","ErrorMessage","component","type","width","height","href","sprite","ChatsList","open","setOpen","useState","chats","toggleModal","pS","_Fragment","length","map","chat","lastEl","messages","day","monthName","year","date","data","Date","getDate","toLocaleString","month","getFullYear","isActive","updateIsActiveChat","_id","reverse","RightChatPage","find","el","dayOfMonth","monthIndex","getMonth","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedHours","String","padStart","formattedMinutes","formattedSeconds","owner","message","addMessage","id","resetForm","socket","io","ChatsPage","useEffect","on","updatedChat","addRandomQuote","off"],"sourceRoot":""}